on:
  push:
    branches:
      - main
      - develop

env:
  STAGE: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

jobs:
  tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Run unit tests
        run: python -m unittest tests/tests.py

  linter:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install flake8
      - name: Run Flake8
        run: flake8 ./src --max-line-length=120

  build:
    runs-on: self-hosted
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        env:
          TOKEN: ${{ env.STAGE == 'prod' && secrets.TOKEN || secrets.TOKEN_DEV }}
        run: docker build --build-arg DECRYPT_PASSPHRASE=${{ secrets.DECRYPT_PASSPHRASE }} --build-arg TOKEN=${{ env.TOKEN }} --build-arg STAGE=${{ env.STAGE }} -t ${{ github.event.repository.name }}-${{ env.STAGE }}:latest .

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Remove old container
        run: docker rm -f ${{ github.event.repository.name }}-${{ env.STAGE }}

      - name: Run a command inside the container
        run: docker run -d --name ${{ github.event.repository.name }}-${{ env.STAGE }} ${{ github.event.repository.name }}-${{ env.STAGE }}:latest